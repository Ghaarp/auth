name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/f32f3g423w23efg32"
  AUTH_IMAGE_NAME: "auth_service"
  MIGRATOR_IMAGE_NAME: "migrator"
  AUTH_CONTAINER_NAME: "auth_service-container"
  MIGRATOR_CONTAINER_NAME: "migrator-container"
  PORT: 50053

jobs:
  image-build-and-push:
    runs-on: ubuntu-latest
    environment: auth-env

    steps:
      - name: Checkout master 
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Build and Push Docker Image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)

          #docker buildx create --use

          echo "Registry: $REGISTRY"
          echo "Auth image: $REGISTRY/$AUTH_IMAGE_NAME:$TAG_NAME"
          echo "Migrator image: $REGISTRY/$MIGRATOR_IMAGE_NAME:$TAG_NAME"

          docker buildx build --no-cache --push --tag $REGISTRY/$AUTH_IMAGE_NAME:$TAG_NAME -f auth_service.Dockerfile .
          docker buildx build --no-cache --push --tag $REGISTRY/$MIGRATOR_IMAGE_NAME:$TAG_NAME -f migrator.Dockerfile .

  deploy-image:
    runs-on: ubuntu-latest
    environment: auth-env
    needs: image-build-and-push

    steps:
      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: |
            IMAGE_NAME, REGISTRY, GITHUB_SHA, CONTAINER_NAME,
            PG_DATABASE_NAME, PG_USER, PG_PASSWORD, PG_HOST, PG_PORT, 
            AUTH_HOST, AUTH_PORT, MIGRATION_DIR

          script: |
            git pull origin main

            # Set up variables
            TAG_NAME=$(echo $GITHUB_SHA | head -c7)

            # Export .env variables
            export PG_DATABASE_NAME=${{ secrets.PG_DATABASE_NAME }}
            export PG_USER=${{ secrets.PG_USER }}
            export PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            export PG_HOST=${{ secrets.PG_HOST }}
            export PG_PORT=${{ secrets.PG_PORT }}
            export AUTH_HOST=${{ secrets.AUTH_HOST }}
            export AUTH_PORT=${{ secrets.AUTH_PORT }}
            export MIGRATION_DIR=${{ secrets.MIGRATION_DIR }}

            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

            # Pull new images
            docker pull $REGISTRY/$AUTH_IMAGE_NAME:$TAG_NAME
            docker pull $REGISTRY/$MIGRATOR_IMAGE_NAME:$TAG_NAME

            # Creating new .env
            cat <<EOF > .env
            PG_DATABASE_NAME=${{ secrets.PG_DATABASE_NAME }}
            PG_USER=${{ secrets.PG_USER }}
            PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            PG_HOST=${{ secrets.PG_HOST }}
            PG_PORT=${{ secrets.PG_PORT }}
            AUTH_HOST=${{ secrets.AUTH_HOST }}
            AUTH_PORT=${{ secrets.AUTH_PORT }}
            MIGRATION_DIR=${{ secrets.MIGRATION_DIR }}
            EOF

            # Refresh docker-compose.yml 
            # sed -i "s|$REGISTRY/$AUTH_IMAGE_NAME:.*|$REGISTRY/$AUTH_IMAGE_NAME:$TAG_NAME|" docker-compose.yaml
            # sed -i "s|$REGISTRY/$MIGRATOR_IMAGE_NAME:.*|$REGISTRY/$MIGRATOR_IMAGE_NAME:$TAG_NAME|" docker-compose.yaml

            # Run compose
            docker-compose down

            echo "Current directory:"
            pwd
            echo "Files in current directory:"
            ls -la

            docker-compose up -d --remove-orphans